q
puts articles
articles
exit
html_doc.search(".productGridItem h2 a").first[:title].strip
html_doc.search(".productGridItem h2 a").first[:title]
html_doc.search(".productGridItem h2 a").count
html_doc.search(".productGridItem").count
q
page
page.search("form")
page
q
agent.get "https://www.carrefour.es/?q=banana"
agent.get = "https://www.carrefour.es/?q=banana"
page.get = "https://www.carrefour.es/?q=banana"
url
page.search("h2").last.text
page.search("p").last.text
page.search("p").first.text
page.search("p").first
page.search("p")
page.search("h1")
page.search("article")
page
q
html_doc.search("article")
html_doc.search("h1")
html_doc
html_doc.search("article").count
html_doc.search("article h1").first
q
html_doc.search(".listing-link")[3][:title]
html_doc.search(".listing-link")[2][:title]
html_doc.search(".listing-link")[1][:title]
q
html_doc.search(".listing-link")[1][:title]
html_doc.search(".listing-link")[1]
html_doc.search('.block-grid-xs-2 .v2-listing-card__info .text-body').first
doc.search('.block-grid-xs-2 .v2-listing-card__info .text-body').first
puts articles
articles
q
html_doc.search(".listing-link").first[:title].split(",").first
html_doc.search(".listing-link").first[:title]
html_doc.search(".listing-link").first
html_doc.search(".listing-link").count
html_doc = Nokogiri::HTML(html_string)
html_string = open(url).read
open(url).read.class
open(url).read
open(url)
exit
(0...ITEMS.length).include?(index.to_i - 1)
index.to_i - 1
ITEMS.length
"356".match?(/^\d+$/)
"a".match?(/^\d+$/)
index.match?(/^\d+$/)
index
c
ITEMS.find { |item| item[:name] == item }
ITEMS.first[:name] == item
ITEMS.first[:name]
ITEMS.first
ITEMS
ITEMS.find { |item| item[:name] == item }
